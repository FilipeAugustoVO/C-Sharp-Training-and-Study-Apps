Visual Studio Anotações:

Notas importantes:

- Forms/Formas são Classes!

Instância/instance (OOP): Ocorrência concreta de um objeto. Formalmente sinônimo com objeto. Instanciação é a criação de uma Instância.


Toolbox:

	Common Controls:

		CheckBox: Um componente onde existem várias opções e é permitido marcar uma ou mais delas.


		Label: Provê uma descrição run-time ou texto descriptivo para um control


		Textbox: Cria uma caixa de texto que permite ao usuário inserir texto, e provêm edição multi-linha e mascaração de texto de senha.

		PictureBox: 

			 Propriedade Sizemode: Define a maneira que a imagem será exibida no formulário. Tem três opções:

			 	- Normal: A imagem é exibida em seu tamanho normal e sempre é posicionada a partir do canto superior do componente; caso a imagem seja maior que Picturebox, ela será cortada.

			 	- StretchImage: A imagem é ajustada automaticamente ao tamanho do PictureBox

			 	- Autosize: o PictureBox altera seu tamanho automaticamente, para se ajustar ao tamanho da imagem.

			 ComboBox: Exibe uma caixa de texto editável com uma lista suspensa de valores permitidos. 
			 
			 	Items: Itens na caixa de combinação. São os valores permitidos da lista suspensa.



Containers:

	Panel: Auxillia na composição do formulário, possibilitando agrupar vários componentes dentro dele, deixando o trabalho com um aspecto mais organizado.	Por exemplo, se eu deixar um panel com vários botões invisiveis, tanto o panel como os botões dentro dele desaparecerão.	


Propriedades:

	Background Color: Altera cor do pano de fundo do aplicativo.

		Nota: A cor bacaninha cinza do Windows é a cor Control, no System.


	Border Style: Indica se o painel deve ter uma borda.
	
		Fixed Single: Impede o redimensionamento da border durante execução do programa, deixando-a fixa.	


	Font: Altera a fonte de texto de formulários e tal, tipo de fonte, tamanho, etc.	


	FormBorderStyle: Indica a aparência e ação  da borda e da barra de titulo da Forma.

		FixedSingle: Impede redimensionamento da janela durante a execução do programa, deixando ela fixa.

	Start Position: Determina a posição da forma quando ela aparece/inicia.

		Center Screen: Deixa o formulário centralizado na tela quando estiver em execuão.

	Icon: Altera icone do formulário na janela.			


	MaximizeBox: Determina se a forma tem o botãozinho de maximize box ativo na janela.


	Sizemode: Acessada pelo componente PictureBox, temos acesso á propriedade SizeMode, na qual define a maneira em que a imagem será exibida no formulário. Ela tem as seguintes opções:

		Normal - a imagem é exibida em seu tamanho normal e sempre é posicionada a partir do canto superior do componente; caso a imagem seja maior que a PictureBox, ela será cortada.

		StretchImage - a imagem é ajustada automaticamente ao tamanho do PictureBox.

		AutoSize - o PictureBox altera seu tamannho automaticamente, para se ajustar ao tamanho da imagem.

	Text: Texto exibido no elemento.	



Notas de programação C#:

Componente: Ler esse artigo á seguir - https://msdn.microsoft.com/en-us/library/0b1dk63b.aspx

	OpenFileDialog: Usado para selecionar e localizar arquivos em um computador.
	
	http://www.macoratti.net/10/11/c_opfd1.htm é ótimo pra explicar!

	Propriedades do OpenFileDialog:

	1- InitialDirectory - Representa o diretório a ser exibido quando a janela de diálogo aparecer pela primeira vez.
Ex: openFileDialog1.InitialDirectory = @"C:\";
Se a propriedade RestoreDirectory for definida como True a caixa de diálogo restaura o diretório atual antes de ser fechada.
Ex: openFileDialog1.RestoreDirectory = true;

2- Title - Usada para definir ou atribuir um título a janela de diálogo: Ex: openFileDialog1.Title = "Localizar Arquivos";

3- Default Extension - Representa a extensão padrão do arquivo a ser localizado: Ex: openFileDialog1.DefaultExt = "txt";

4- Filter - Representa o filtro da janela de diálogo que será usado para filtrar o tipo de arquivos a serem 
carregados durante a localização. O exemplo abaixo exibe somente arquivos com extensão .txt:
Ex: openFileDialog1.Filter = "txt files (*.txt)|*.txt|All files (*.*)|*.*";

5- FilterIndex - Representa o indíce do filtro atualmetne selecionado na janela de diálogo: Ex:openFileDialog1.FilterIndex = 2;

6- ChecFileExists - Indica se a janela de diálogo exibirá um aviso se o usuário especificar um nome de arquivo inexistente;
Ex: openFileDialog1.CheckFileExists = true;

7- CheckPathExists - Indica se a janela de diálogo exibirá um aviso se o usuário especificar um caminho inexistente;
Ex: openFileDialog1.CheckPathExists = true;

8- FileName - Representa o nome do arquivo selecionado na janela de diálogo. Ex: textBox1.Text = openFileDialog1.FileName;

9- MultiSelect - Se esta propriedade for definida como True pode-se selecionar mais de um arquivo e FileNames representará todos
os arquivos selecionados. Neste caso deve-se usar um laço foreach para exibir os arquivos selecionados. 
     this.openFileDialog1.Multiselect = true; 
     foreach (String file in openFileDialog1.FileNames) 
     {     MessageBox.Show(file);  }

10- ReadyOnlyChecked - Indica se a caixa de verificação estará selecionada: Ex: openFileDialog1.ReadOnlyChecked = true;

11- ShowReadyOnly - Indica se a caiaxa de verificação read-only estará disponível ou não. Ex: openFileDialog1.ReadOnlyChecked = true;



Classes:

MessageBox: Exibe uma janela de mensagem, também conhecida como caixa de dialogo, que exibe uma mensagem ao usuário. Mais info em: https://docs.microsoft.com/pt-br/dotnet/api/system.windows.forms.messagebox?redirectedfrom=MSDN&view=netframework-4.7.2

E também: https://www.dotnetperls.com/messagebox-show

A ordem dos argumentos é:
(string, titulo em string, outros valores, outros valores)

   Metodos da classe MessageBox::

	MessageBox.Show: Mostra a MessageBox. È um metodo estático, ou seja, não precisamos criar nenhuma outra MessageBox() em lugar algum de nosso código.

	Nota pra si: Pesquisar o que é "Metodo Estático" (Static Method - termos diferentes em outras linguas?)
 	
 	.MessageBoxButtons: Mostra botões á serem exibidos na Message Box. 

 	    MessageBoxButtons[NomeDosBotões]: Colocamos o nome dos botões da DialogBox. Por exemplo, MessageBoxButtons.YesNo, fará a Dialog box com dois botões Yes/No. Podemos adicionar uma variável para o resultado de MessageBox.Show. Por exemplo, podemos testar result1 pra saber qual botão foi apertado.

 		MessageBoxIcon.Question: Adiciona um icone de pergunta e a opção "cancel" á pergunta feita no código anterior.

 		MessageBoxDefaultButton.[nome do botão]: Especifica o botão "padrão" do argumento. Por exemplo, podemos colocar Button1 numa pergunta de Sim/Não/Cancelar, e ai o Sim será o botão padrão pré-marcado, pois ele é o primeiro (button1). Por exemplo: .MessageBoxDefaultButton.Button1.

 		DialogResult: Interrompe a lógica pra testar os resultados dos botões apertados anteriormente no dialogo. Exemplo no qual estamos os três ultimos resultados de apertos de botões:

 		if (result1 == DialogResult.Yes &&
   		result2 == DialogResult.Yes &&
    	result3 == DialogResult.No)
	{
    	MessageBox.Show("You answered yes, yes and no.");
	}

		MessageBoxOptions.RightAlign: Alinha os botões no dialogo. Nesse comando, alinhamos pela direita. Podemos usar .LeftAlign pra ir alinhar á esquerda.

		MessageBoxIcon.[nome do icone]: Insere um icone na MessageBox. Por exemplo, MessageBoxIcon.Warning vai inserir um icone de aviso no dialogo.





Application.Run(()): Comando comumente encontrado em program.cs. Faz com que o referido formulário execute primeiro. Exemplo: Application.Run(new FrmMenuPrincipal()); - esse código fará com que o aplicativo inicie uma nova instância do formulário MenuPrincipal.



PictureBox: Comando que invoca PictureBox pra exibir uma imagem.

PictureBoxSizeMode.: Especifica como uma certa imagem é posicionada dentro da PictureBox. Seus parâmetros são Normal, StretchImage e AutoSize. É o comando sizemode das propriedades, só que em código. Por exemplo: PictureBoxSizeMode.Normal, faz a imagem ficar no tamanho normal.

.Load: Carrega um arquivo.

.Image: Age com uma imagem. Por exemplo, PictureBox.Image = Null, faz com que a imagem da PictureBox seja nula, ou seja, não tem imagem.

.Show: Abre uma janela imediatamente. Ver mais comentário aqui: https://docs.microsoft.com/pt-br/dotnet/api/system.windows.window.show?redirectedfrom=MSDN&view=netframework-4.7.2#System_Windows_Window_Show

.Visible = True/False #Torna objetos visiveis (true) ou invisiveis (false). Por exemplo, TextBox1.Visible tornaria uma Textbox invisivel.

.Hide: Esconde o conteudo.


Control:

.Enabled: Obtém ou define um valor que indica se o controle pode ou não responder á interação do usuário.


Tipos de Métodos:

	Metodo Estático: 
		https://pt.stackoverflow.com/questions/54012/qual-a-fun%C3%A7%C3%A3o-de-um-m%C3%A9todo-est%C3%A1tico